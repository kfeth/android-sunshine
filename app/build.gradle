apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.kfeth.sunshine"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes {
        buildTypes.each {
            it.buildConfigField "String", "WEATHER_API_URL", '"https://api.openweathermap.org/data/2.5/"'
            it.buildConfigField "String", "WEATHER_API_KEY", '"957596741872ad1eee58bb699c49294e"'
            it.buildConfigField "String", "REVERSE_GEOCODE_API_URL", '"https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=%s&longitude=%s&localityLanguage=en"'
            it.buildConfigField "String", "FLAG_ICON_URL", '"https://www.countryflags.io/%s/flat/64.png"'
            it.buildConfigField "String", "STATIC_MAP_URL", '"https://api.mapbox.com/styles/v1/mapbox/satellite-v9/static/%s,%s,9,0/300x200@2x?access_token=pk.eyJ1Ijoia2ZldGgiLCJhIjoiY2tlbmE0dnVmMGN3YzJxbndmcnY2OTNxaiJ9.kJ5CXCfUlJBbdYJ25i2FMA"'
        }
    }

    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += [
                "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-Xuse-experimental=kotlinx.coroutines.FlowPreview"
        ]
    }
}

dependencies {
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugarVersion"

    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltJetpackVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "androidx.activity:activity-ktx:$activityKtxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.core:core-ktx:$ktxVersion"
    implementation "androidx.datastore:datastore-preferences:$dataStoreVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltJetpackVersion"
    implementation "androidx.hilt:hilt-work:$hiltJetpackVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$liveDataVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshLayoutVersion"
    implementation "androidx.work:work-runtime-ktx:$workManagerVersion"
    implementation "com.getkeepsafe.taptargetview:taptargetview:$tapTargetVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    androidTestImplementation "androidx.test.ext:junit:$testExtJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    testImplementation "junit:junit:$junitVersion"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
}